// generated by Fast Light User Interface Designer (fluid) version 1.0400

#ifndef ContourUI_h
#define ContourUI_h
#include <FL/Fl.H>
/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * $Id: ContourUI.fl,v 1.7 2004/05/13 18:37:49 xpxqx Exp $
 *
 * Copyright (c) 2002 - 2004 Sean McInerney
 * All rights reserved.
 *
 * See Copyright.txt or http://vtkfltk.sourceforge.net/Copyright.html
 * for details.
 *
 *    This software is distributed WITHOUT ANY WARRANTY; without even 
 *    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
 *    PURPOSE.  See the above copyright notice for more information.
 *
 */
#include "ContourBase.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Input.H>
extern void IsoInputCb(Fl_Value_Input*, void*);
#include <FL/Fl_Check_Button.H>
extern void ContourToggleCb(Fl_Check_Button*, void*);
#include <FL/Fl_Button.H>
extern void SaveSeriesCb(Fl_Button*, void*);
extern void SaveImageCb(Fl_Button*, void*);
#include <FL/Fl_Box.H>
#include <FL/Fl_Progress.H>

class VTK_EXPORT ContourUI : public ContourBase {
public:
  static ContourUI* New(void); 
  vtkTypeMacro(ContourUI, ContourBase); 
  ContourUI();
private:
  Fl_Double_Window *mWindow;
  inline void cb_mWindow_i(Fl_Double_Window*, void*);
  static void cb_mWindow(Fl_Double_Window*, void*);
  Fl_VTK_Window *mView;
public:
  Fl_Value_Input *IsoInput;
  Fl_Check_Button *ContourToggle;
  Fl_Progress *Progress;
  Fl_VTK_Window* GetView();
  void Check(void);
private:
  void InitIsoInput(void);
  ContourUI(const ContourUI&); // Not implemented.
  void operator=(const ContourUI&); // Not implemented.
  friend void ContourUIDummy(void); 
};
void ContourUIDummy(void);
#endif
