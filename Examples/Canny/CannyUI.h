// generated by Fast Light User Interface Designer (fluid) version 1.0400

#ifndef CannyUI_h
#define CannyUI_h
#include <FL/Fl.H>
/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * $Id: CannyUI.fl,v 1.4 2004/05/27 00:14:49 xpxqx Exp $
 *
 * Copyright (c) 2002 - 2004 Sean McInerney
 * All rights reserved.
 *
 * See Copyright.txt or http://vtkfltk.sourceforge.net/Copyright.html
 * for details.
 *
 *    This software is distributed WITHOUT ANY WARRANTY; without even 
 *    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
 *    PURPOSE.  See the above copyright notice for more information.
 *
 */
#include "CannyBase.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Input.H>
extern void CannyLineWidthCb(Fl_Value_Input*, void*);
extern void CannySmoothingRadiusFactorCb(Fl_Value_Input*, void*);
#include <FL/Fl_Button.H>
extern void CannyForegroundCb(Fl_Button*, void*);
extern void CannyBackgroundCb(Fl_Button*, void*);
#include <FL/Fl_Check_Button.H>
extern void CannyEdgelVisibilityCb(Fl_Check_Button*, void*);
extern void CannyImageVisibilityCb(Fl_Check_Button*, void*);
#include <FL/Fl_Box.H>
extern void CannyLoadCb(Fl_Button*, void*);
extern void CannySaveCb(Fl_Button*, void*);
#include <FL/Fl_Progress.H>

class VTK_EXPORT CannyUI : public CannyBase {
public:
  static CannyUI* New(void); 
  vtkTypeMacro(CannyUI, CannyBase); 
  CannyUI();
private:
  Fl_Double_Window *mWindow;
  inline void cb_mWindow_i(Fl_Double_Window*, void*);
  static void cb_mWindow(Fl_Double_Window*, void*);
  Fl_VTK_Window *mView;
  Fl_Group *mGroup1;
  Fl_Group *mGroup2;
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
public:
  Fl_Progress *Progress;
  Fl_VTK_Window* GetView();
  void Check(void);
  void Flush(void);
private:
  CannyUI(const CannyUI&); // Not implemented.
  void operator=(const CannyUI&); // Not implemented.
  friend void CannyUIDummy(void); 
};
void CannyUIDummy(void);
#endif
