// generated by Fast Light User Interface Designer (fluid) version 1.0400

#include "MCasesUI.h"
/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * $Id: MCasesUI.fl,v 1.6 2004/05/13 18:37:49 xpxqx Exp $
 *
 * Copyright (c) 2002 - 2004 Sean McInerney
 * All rights reserved.
 *
 * See Copyright.txt or http://vtkfltk.sourceforge.net/Copyright.html
 * for details.
 *
 *    This software is distributed WITHOUT ANY WARRANTY; without even 
 *    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
 *    PURPOSE.  See the above copyright notice for more information.
 *
 */
#include "Fl_VTK_Window.H"
#include "vtkObjectFactory.h"
/* fool fluid */
//vtkCxxRevisionMacro (MCasesUI, "$Revision: 1.6 $");
/* fool fluid */
vtkStandardNewMacro (MCasesUI);

void MCasesUI::cb_mWindow_i(Fl_Double_Window*, void*) {
  exit(0);
}
void MCasesUI::cb_mWindow(Fl_Double_Window* o, void* v) {
  ((MCasesUI*)(o->user_data()))->cb_mWindow_i(o,v);
}

MCasesUI::MCasesUI() {
  { mWindow = new Fl_Double_Window(296, 328, "Marching Cubes Cases");
    mWindow->color((Fl_Color)16);
    mWindow->callback((Fl_Callback*)cb_mWindow, (void*)(this));
    mWindow->align(Fl_Align(FL_ALIGN_CENTER));
    { Fl_VTK_Window* o = mView = new Fl_VTK_Window(4, 4, 288, 288);
      mView->box(FL_NO_BOX);
      mView->color(FL_BACKGROUND_COLOR);
      mView->selection_color(FL_BACKGROUND_COLOR);
      mView->labeltype(FL_NO_LABEL);
      mView->labelfont(0);
      mView->labelsize(14);
      mView->labelcolor(FL_FOREGROUND_COLOR);
      mView->align(Fl_Align(FL_ALIGN_CENTER));
      mView->when(FL_WHEN_RELEASE);
      o->resizable(*o);
    } // Fl_VTK_Window* mView
    { Fl_Group* o = new Fl_Group(4, 296, 288, 28);
      o->box(FL_PLASTIC_UP_BOX);
      o->labeltype(FL_NO_LABEL);
      o->align(Fl_Align(FL_ALIGN_CENTER));
      { mCaseInput = new Fl_Value_Input(42, 300, 36, 20, "Case");
        mCaseInput->box(FL_PLASTIC_DOWN_BOX);
        mCaseInput->color(FL_GRAY0);
        mCaseInput->labelfont(1);
        mCaseInput->labelsize(12);
        mCaseInput->maximum(255);
        mCaseInput->step(1);
        mCaseInput->value(9);
        mCaseInput->textfont(4);
        mCaseInput->textcolor((Fl_Color)3);
        mCaseInput->callback((Fl_Callback*)CaseInputCb, (void*)(this));
        mCaseInput->when(FL_WHEN_RELEASE);
      } // Fl_Value_Input* mCaseInput
      { mCaseRoller = new Fl_Roller(82, 300, 158, 20);
        mCaseRoller->type(1);
        mCaseRoller->box(FL_PLASTIC_DOWN_BOX);
        mCaseRoller->labeltype(FL_NO_LABEL);
        mCaseRoller->maximum(255);
        mCaseRoller->step(1);
        mCaseRoller->value(9);
        mCaseRoller->callback((Fl_Callback*)CaseRollerCb, (void*)(this));
        mCaseRoller->align(Fl_Align(FL_ALIGN_CENTER));
      } // Fl_Roller* mCaseRoller
      { Fl_Light_Button* o = new Fl_Light_Button(244, 300, 44, 20, "AA");
        o->box(FL_PLASTIC_UP_BOX);
        o->labeltype(FL_SHADOW_LABEL);
        o->labelfont(1);
        o->labelsize(10);
        o->callback((Fl_Callback*)AntiAliasToggleCb, (void*)(this));
        o->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
      } // Fl_Light_Button* o
      o->end();
    } // Fl_Group* o
    { Fl_Box* o = new Fl_Box(2, 2, 292, 292);
      o->labeltype(FL_NO_LABEL);
      o->hide();
      o->deactivate();
      Fl_Group::current()->resizable(o);
    } // Fl_Box* o
    mWindow->end();
  } // Fl_Double_Window* mWindow
  this->SetFltkWindow(this->mWindow);
  this->SetVtkWindow(this->mView);
}

Fl_VTK_Window* MCasesUI::GetView() {
  return this->mView;
}

void MCasesUI::UpdateView() {
  if (this->mView != NULL) {
    this->mView->Update();
  }
}

void MCasesUIDummy(void) {
  // Silences compiler warnings about private destructor and no friends.
}
