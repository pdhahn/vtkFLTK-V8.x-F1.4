// generated by Fast Light User Interface Designer (fluid) version 1.0400

#include "QuadricCutUI.h"
/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * $Id: QuadricCutUI.fl,v 1.4 2004/05/13 18:37:50 xpxqx Exp $
 *
 * Copyright (c) 2002 - 2004 Sean McInerney
 * All rights reserved.
 *
 * See Copyright.txt or http://vtkfltk.sourceforge.net/Copyright.html
 * for details.
 *
 *    This software is distributed WITHOUT ANY WARRANTY; without even 
 *    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
 *    PURPOSE.  See the above copyright notice for more information.
 *
 */
#include "Fl_VTK_Window.H"
#include "vtkObjectFactory.h"
/* fool fluid */
//vtkCxxRevisionMacro (QuadricCutUI, "$Revision: 1.4 $");
/* fool fluid */
vtkStandardNewMacro (QuadricCutUI);

void QuadricCutUI::cb_mWindow_i(Fl_Double_Window*, void*) {
  exit(0);
}
void QuadricCutUI::cb_mWindow(Fl_Double_Window* o, void* v) {
  ((QuadricCutUI*)(o->user_data()))->cb_mWindow_i(o,v);
}

Fl_Menu_Item QuadricCutUI::menu_InIn[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_OutIn[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_InOut[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_OutOut[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_OnOn[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_OnIn[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_OnOut[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_InOn[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

Fl_Menu_Item QuadricCutUI::menu_OutOn[] = {
 {"WHITE", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"CLEAR", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {"BLACK", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

QuadricCutUI::QuadricCutUI() {
  { mWindow = new Fl_Double_Window(372, 228, "Quadric Cut");
    mWindow->color((Fl_Color)16);
    mWindow->callback((Fl_Callback*)cb_mWindow, (void*)(this));
    mWindow->align(Fl_Align(FL_ALIGN_CENTER));
    { Fl_VTK_Window* o = mView = new Fl_VTK_Window(4, 4, 220, 220);
      mView->box(FL_NO_BOX);
      mView->color(FL_BACKGROUND_COLOR);
      mView->selection_color(FL_BACKGROUND_COLOR);
      mView->labeltype(FL_NO_LABEL);
      mView->labelfont(0);
      mView->labelsize(14);
      mView->labelcolor(FL_FOREGROUND_COLOR);
      mView->align(Fl_Align(FL_ALIGN_CENTER));
      mView->when(FL_WHEN_RELEASE);
      o->resizable(*o);
    } // Fl_VTK_Window* mView
    { Fl_Group* o = new Fl_Group(228, 4, 140, 220);
      o->box(FL_PLASTIC_UP_BOX);
      o->labeltype(FL_NO_LABEL);
      o->align(Fl_Align(FL_ALIGN_CENTER));
      { Fl_Choice* o = new Fl_Choice(286, 8, 78, 20, "InIn:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)InInCb, (void*)(this));
        o->menu(menu_InIn);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 32, 78, 20, "OutIn:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)OutInCb, (void*)(this));
        o->menu(menu_OutIn);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 56, 78, 20, "InOut:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)InOutCb, (void*)(this));
        o->menu(menu_InOut);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 80, 78, 20, "OutOut:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)OutOutCb, (void*)(this));
        o->menu(menu_OutOut);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 104, 78, 20, "OnOn:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)OnOnCb, (void*)(this));
        o->menu(menu_OnOn);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 128, 78, 20, "OnIn:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)OnInCb, (void*)(this));
        o->menu(menu_OnIn);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 152, 78, 20, "OnOut:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)OnOutCb, (void*)(this));
        o->menu(menu_OnOut);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 176, 78, 20, "InOn:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)InOnCb, (void*)(this));
        o->menu(menu_InOn);
      } // Fl_Choice* o
      { Fl_Choice* o = new Fl_Choice(286, 200, 78, 20, "OutOn:");
        o->down_box(FL_BORDER_BOX);
        o->textfont(4);
        o->callback((Fl_Callback*)OutOnCb, (void*)(this));
        o->menu(menu_OutOn);
      } // Fl_Choice* o
      o->end();
    } // Fl_Group* o
    { Fl_Box* o = new Fl_Box(2, 2, 224, 224);
      o->labeltype(FL_NO_LABEL);
      o->hide();
      o->deactivate();
      Fl_Group::current()->resizable(o);
    } // Fl_Box* o
    mWindow->end();
  } // Fl_Double_Window* mWindow
  this->SetFltkWindow(this->mWindow);
  this->SetVtkWindow(this->mView);
}

Fl_VTK_Window* QuadricCutUI::GetView() {
  return this->mView;
}

void QuadricCutUIDummy(void) {
  // Silences compiler warnings about private destructor and no friends.
}
